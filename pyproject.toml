[project]
name = "gpt_django"
version = "0.0.0-dev"
dependencies = [
    "Django>=4,<4.2",
    "bcrypt",
    "django-behaviors",
    "django-environ",
    "django-ipware",
    "django-axes",
    "whitenoise",
    "django-storages",
    "djangorestframework",
    "djangorestframework-camel-case",
    "drf-jwt",
    "drf-spectacular[sidecar]",
    "django-filter",
    "django-split-settings",
    "django-healthchecks",
    "redis",
    "sentry-sdk",
    "Pillow",
    "psycopg2-binary",
    "openai",
    "six",
    "django-jazzmin",
    "social-auth-app-django",
]


[project.optional-dependencies]
dev = [
    "ipython",

    "pytest-django>=3.9",
    "pytest-deadfixtures",
    "pytest-env",
    "pytest-freezegun",
    "pytest-mock",
    "pytest-randomly",
    "pytest-lazy-fixture",

    "ruff",

    "black",

    "autoflake==1.7.0",

    "dotenv-linter",

    "freezegun",
    "mixer",

    "jedi",

    "mypy",
    "django-stubs",
    "djangorestframework-stubs",
    "types-freezegun",
    "types-Pillow",
    "types-pytest-lazy-fixture",
]

[tool.setuptools]
py-modules = ["backend"]


[tool.flake8]
banned-modules = """
    typing.Optional = Please use "x | None"
    typing.Union = Please use "x | y"
    typing.List = Please use "list" instead of "List"
    typing.Dict = Please use "dict" instead of "Dict"
"""

[tool.ruff]
line-length = 160
exclude = [
    "static",
    "migrations",
    "frontend",
    ".git",
    "__pycache__",
]

[tool.ruff.lint]
ignore = [
    "E501",  # Line too long
    "E265",  # Block comments should have one space before the pound sign (#) and the comment itself
    "F811",  # Redefinition of unused name from line n
    "PT001",  # Use @pytest.fixture() over @pytest.fixture
    "SIM102",  # Use a single if-statement instead of nested if-statements
    "E203",  # whitespace before ':', disabled for black purposes https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#slices
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"


[tool.isort]
profile = "google"
line_length = 160
extra_standard_library = ["pytest"]
known_django = ["django", "restframework"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]
use_parentheses = true
include_trailing_comma = true
multi_line_output = 3


[tool.black]
exclude = '''
/(
  | migrations
)/
'''
line_length = 160


[tool.pytest.ini_options]
 DJANGO_SETTINGS_MODULE = "app.settings"
 python_files = ["test*.py"]
 addopts = ["--reuse-db"]
 markers = [
   "freeze_time: freezing time marker (pytest-freezegun does not register it)",
 ]
 filterwarnings = [  # Pattern: `action:message:category:module:line` (https://docs.python.org/3/library/warnings.html#describing-warning-filters)
   "ignore:.*'rest_framework_jwt.blacklist' defines default_app_config.*You can remove default_app_config.::django",
   "ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning:pytest_freezegun:17",


    # Warning: django.utils.deprecation.RemovedInDjango50Warning: The is_dst argument to make_aware(), used by the Trunc() database functions and QuerySet.datetimes(), is deprecated as it has no effect with zoneinfo time zones.
    # Don't specify the exact warning (django.utils.deprecation.RemovedInDjango50Warning) as not all version of Django know it and pytest will fail
    "ignore:The is_dst argument to make_aware():",
 ]
 env = [
   "CI=1",
   "CELERY_ALWAYS_EAGER=True",
   "DISABLE_THROTTLING=True",
   "AXES_ENABLED=False",
 ]
